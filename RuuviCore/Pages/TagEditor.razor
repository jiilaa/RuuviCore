@page "/edit/{tagId}"
@using net.jommy.RuuviCore.Interfaces
@using global::Orleans
@using net.jommy.RuuviCore.Common
@using InputType = BlazorStrap.InputType
@inject IGrainFactory GrainFactory
@inject NavigationManager NavigationManager

<h1>RuuviTag (@TagId) settings</h1>

<BSForm Model="@RuuviTag" OnValidSubmit="@HandleValidSubmitAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />
        @if (TagId == "NewTag")
        {
            <BSFormGroup>
                <BSLabel For="macAddress">MAC address:</BSLabel>
                <BSInput Id="macAddress" InputType="InputType.Text" PlaceHolder="Enter MAC address" @bind-Value="MacAddress"/>
            </BSFormGroup>
        }
        <BSFormGroup>
            <BSLabel For="name">Name:</BSLabel>
            <BSInput Id="name" InputType="InputType.Text" @bind-Value="RuuviTag.Name"/>
        </BSFormGroup>
        <BSFormGroup IsCheck="true">
            <BSBasicInput InputType="InputType.Checkbox" Id="storeName" @bind-Value="RuuviTag.StoreName"/>
            <BSLabel For="storeName">Store name with measurement data.</BSLabel>
        </BSFormGroup>
        <BSFormGroup>
            <BSLabel For="dataSavingInterval">Data saving interval (seconds)</BSLabel>
            <BSBasicInput InputType="InputType.Number" Id="dataSavingInterval" @bind-Value="RuuviTag.DataSavingInterval" />
        </BSFormGroup>
        <BSFormGroup IsCheck="true">
            <BSBasicInput InputType="InputType.Checkbox" Id="storeAcceleration" @bind-Value="RuuviTag.StoreAcceleration"/>
            <BSLabel For="storeAcceleration">Store acceleration valies with measurement data.</BSLabel>
        </BSFormGroup>
        <BSFormGroup IsCheck="true">
            <BSBasicInput InputType="InputType.Checkbox" Id="allowValuesViaGateway" @bind-Value="RuuviTag.AllowMeasurementsThroughGateway"/>
            <BSLabel For="allowValuesViaGateway">Allow measurement data to be submitted through HTTP gateway also (e.g. when RuuviTag is too far for RuuviCore to hear).</BSLabel>
        </BSFormGroup>
        <BSFormGroup IsCheck="true">
            <BSBasicInput InputType="InputType.Checkbox" Id="discardMinMaxValues" @bind-Value="RuuviTag.DiscardMinMaxValues"/>
            <BSLabel For="discardMinMaxValues">Discard min or max values (usually an indication of a faulty blueltooth packet).</BSLabel>
        </BSFormGroup>
        <BSFormGroup IsCheck="true">
            <BSBasicInput InputType="InputType.Checkbox" Id="includeInDashboard" @bind-Value="RuuviTag.IncludeInDashboard"/>
            <BSLabel For="includeInDashboard">Show current data of this RuuviTag in the dashboard.</BSLabel>
        </BSFormGroup>
        <BSButton Color="Color.Primary" ButtonType="ButtonType.Submit">Save</BSButton>
</BSForm>

@code {
    [Parameter]
    public string TagId { get; set; }

    private RuuviTag RuuviTag { get; set; } = new RuuviTag();

    private string MacAddress { get; set; } = ""; 

    protected override async Task OnInitializedAsync()
    {
        if (TagId != "NewTag")
        {
            RuuviTag = await GrainFactory.GetGrain<IRuuviTag>(TagId.ToActorGuid()).GetTag();
        }
    }

    private async Task HandleValidSubmitAsync()
    {
        if (TagId == "NewTag")
        {
            if (string.IsNullOrWhiteSpace(MacAddress))
            {
                // TODO: Figure out how to show error in the UI or disable the button
                throw new Exception("Invalid MAC Address");
            }
            
            RuuviTag.MacAddress = MacAddress;
            await GrainFactory.GetGrain<IRuuviTag>(MacAddress.ToActorGuid()).Edit(RuuviTag);
        }
        else
        {
            await GrainFactory.GetGrain<IRuuviTag>(TagId.ToActorGuid()).Edit(RuuviTag);
        }

        NavigationManager.NavigateTo("/taglist");
    }
}
